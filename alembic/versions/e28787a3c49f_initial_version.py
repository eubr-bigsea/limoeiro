"""Initial version

Revision ID: e28787a3c49f
Revises: 
Create Date: 2025-03-19 22:43:45.606987

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e28787a3c49f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tb_action',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('applies_to', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_contact',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('phone_number', sa.String(length=40), nullable=True),
    sa.Column('cell_phone_number', sa.String(length=40), nullable=True),
    sa.Column('email', sa.String(length=250), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_database_provider_type',
    sa.Column('id', sa.String(length=200), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('image', sa.String(length=8000), nullable=True),
    sa.Column('supports_schema', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_domain',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='inx_uq_domain')
    )
    op.create_table('tb_layer',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='inx_uq_layer')
    )
    op.create_table('tb_responsibility_type',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='inx_uq_responsibility_type')
    )
    op.create_table('tb_role',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_tag',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('applicable_to', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='inx_uq_tag')
    )
    op.create_table('tb_user',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('login', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login', name='inx_uq_user')
    )
    op.create_table('tb_asset',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('fully_qualified_name', sa.String(length=500), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('notes', sa.String(length=8000), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('version', sa.String(length=200), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(length=200), nullable=False),
    sa.Column('asset_type', sa.String(length=20), nullable=False),
    sa.Column('domain_id', sa.UUID(), nullable=True),
    sa.Column('layer_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['tb_domain.id'], name='fk_asset_domain_id', ondelete='set null'),
    sa.ForeignKeyConstraint(['layer_id'], ['tb_layer.id'], name='fk_asset_layer_id', ondelete='set null'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fully_qualified_name', 'asset_type', name='inx_uq_asset')
    )
    op.create_index(op.f('ix_tb_asset_domain_id'), 'tb_asset', ['domain_id'], unique=False)
    op.create_index(op.f('ix_tb_asset_fully_qualified_name'), 'tb_asset', ['fully_qualified_name'], unique=True)
    op.create_index(op.f('ix_tb_asset_layer_id'), 'tb_asset', ['layer_id'], unique=False)
    op.create_table('tb_company',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization', sa.String(length=100), nullable=True),
    sa.Column('document', sa.String(length=100), nullable=True),
    sa.Column('document_type', sa.String(length=20), nullable=True),
    sa.Column('contact_name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['tb_contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_person',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization', sa.String(length=100), nullable=True),
    sa.Column('document', sa.String(length=100), nullable=True),
    sa.Column('document_type', sa.String(length=20), nullable=True),
    sa.Column('company', sa.String(length=200), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['tb_contact.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['tb_user.id'], name='fk_person_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_person_user_id'), 'tb_person', ['user_id'], unique=False)
    op.create_table('tb_a_i_model',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', sa.String(length=200), nullable=False),
    sa.Column('algorithms', sa.String(length=500), nullable=True),
    sa.Column('technologies', sa.String(length=1000), nullable=True),
    sa.Column('server', sa.String(length=1000), nullable=True),
    sa.Column('source', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['tb_asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tb_asset_link',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('url', sa.String(length=2000), nullable=True),
    sa.Column('type', sa.Enum('DOCUMENTATION', 'SOURCE_CODE', 'DEPLOYMENT', 'OTHER', name='LinkTypeEnumType'), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['tb_asset.id'], name='fk_asset_link_asset_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_asset_link_asset_id'), 'tb_asset_link', ['asset_id'], unique=False)
    op.create_table('tb_asset_tag',
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['tb_asset.id'], name='fk_asset_tag_asset_id'),
    sa.ForeignKeyConstraint(['tag_id'], ['tb_tag.id'], name='fk_asset_tag_tag_id'),
    sa.PrimaryKeyConstraint('asset_id', 'tag_id')
    )
    op.create_index(op.f('ix_tb_asset_tag_asset_id'), 'tb_asset_tag', ['asset_id'], unique=False)
    op.create_index(op.f('ix_tb_asset_tag_tag_id'), 'tb_asset_tag', ['tag_id'], unique=False)
    op.create_table('tb_database_provider',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('configuration', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('provider_type_id', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['tb_asset.id'], ),
    sa.ForeignKeyConstraint(['provider_type_id'], ['tb_database_provider_type.id'], name='fk_database_provider_provider_type_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_provider_provider_type_id'), 'tb_database_provider', ['provider_type_id'], unique=False)
    op.create_table('tb_responsibility',
    sa.Column('contact_id', sa.UUID(), nullable=False),
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['tb_asset.id'], name='fk_responsibility_asset_id'),
    sa.ForeignKeyConstraint(['contact_id'], ['tb_contact.id'], name='fk_responsibility_contact_id'),
    sa.ForeignKeyConstraint(['type_id'], ['tb_responsibility_type.id'], name='fk_responsibility_type_id'),
    sa.PrimaryKeyConstraint('asset_id', 'contact_id', 'type_id'),
    sa.UniqueConstraint('asset_id', 'contact_id', 'type_id', name='inx_uq_responsibility')
    )
    op.create_index(op.f('ix_tb_responsibility_asset_id'), 'tb_responsibility', ['asset_id'], unique=False)
    op.create_index(op.f('ix_tb_responsibility_contact_id'), 'tb_responsibility', ['contact_id'], unique=False)
    op.create_index(op.f('ix_tb_responsibility_type_id'), 'tb_responsibility', ['type_id'], unique=False)
    op.create_table('tb_a_i_model_attribute',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('usage', sa.String(length=100), nullable=False),
    sa.Column('model_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['tb_a_i_model.id'], name='fk_a_i_model_attribute_model_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_a_i_model_attribute_model_id'), 'tb_a_i_model_attribute', ['model_id'], unique=False)
    op.create_table('tb_a_i_model_hyper_parameter',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('model_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['tb_a_i_model.id'], name='fk_a_i_model_hyper_parameter_model_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_a_i_model_hyper_parameter_model_id'), 'tb_a_i_model_hyper_parameter', ['model_id'], unique=False)
    op.create_table('tb_a_i_model_result',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('model_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['tb_a_i_model.id'], name='fk_a_i_model_result_model_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_a_i_model_result_model_id'), 'tb_a_i_model_result', ['model_id'], unique=False)
    op.create_table('tb_database',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('retention_period', sa.String(length=100), nullable=True),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['tb_asset.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['tb_database_provider.id'], name='fk_database_provider_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_provider_id'), 'tb_database', ['provider_id'], unique=False)
    op.create_table('tb_database_provider_connection',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('host', sa.String(length=400), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('database', sa.String(length=200), nullable=True),
    sa.Column('extra_parameters', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['tb_database_provider.id'], name='fk_database_provider_connection_provider_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_provider_connection_provider_id'), 'tb_database_provider_connection', ['provider_id'], unique=False)
    op.create_table('tb_database_provider_ingestion',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('include_database', sa.String(length=1000), nullable=True),
    sa.Column('exclude_database', sa.String(length=1000), nullable=True),
    sa.Column('include_schema', sa.String(length=1000), nullable=True),
    sa.Column('exclude_schema', sa.String(length=1000), nullable=True),
    sa.Column('include_table', sa.String(length=1000), nullable=True),
    sa.Column('exclude_table', sa.String(length=1000), nullable=True),
    sa.Column('include_view', sa.Boolean(), nullable=False),
    sa.Column('override_mode', sa.String(length=200), nullable=True),
    sa.Column('scheduling', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('recent_runs_statuses', sa.String(length=100), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['tb_database_provider.id'], name='fk_database_provider_ingestion_provider_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_provider_ingestion_provider_id'), 'tb_database_provider_ingestion', ['provider_id'], unique=False)
    op.create_table('tb_database_provider_ingestion_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=False),
    sa.Column('log', sa.Text(), nullable=True),
    sa.Column('ingestion_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ingestion_id'], ['tb_database_provider_ingestion.id'], name='fk_database_provider_ingestion_log_ingestion_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_provider_ingestion_log_ingestion_id'), 'tb_database_provider_ingestion_log', ['ingestion_id'], unique=False)
    op.create_table('tb_database_schema',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('database_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['database_id'], ['tb_database.id'], name='fk_database_schema_database_id'),
    sa.ForeignKeyConstraint(['id'], ['tb_asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_schema_database_id'), 'tb_database_schema', ['database_id'], unique=False)
    op.create_table('tb_database_table',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', sa.Enum('REGULAR', 'EXTERNAL', 'VIEW', 'SECURE_VIEW', 'MATERIALIZED_VIEW', 'ICEBERG', 'LOCAL', 'PARTITIONED', 'FOREIGN', 'TRANSIENT', name='TableTypeEnumType'), nullable=False),
    sa.Column('proxy_enabled', sa.Boolean(), nullable=False),
    sa.Column('query', sa.String(length=8000), nullable=True),
    sa.Column('cache_type', sa.String(length=200), nullable=True),
    sa.Column('cache_ttl_in_seconds', sa.Integer(), nullable=True),
    sa.Column('cache_validation', sa.String(length=8000), nullable=True),
    sa.Column('database_id', sa.UUID(), nullable=False),
    sa.Column('database_schema_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['database_id'], ['tb_database.id'], name='fk_database_table_database_id'),
    sa.ForeignKeyConstraint(['database_schema_id'], ['tb_database_schema.id'], name='fk_database_table_database_schema_id'),
    sa.ForeignKeyConstraint(['id'], ['tb_asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_table_database_id'), 'tb_database_table', ['database_id'], unique=False)
    op.create_index(op.f('ix_tb_database_table_database_schema_id'), 'tb_database_table', ['database_schema_id'], unique=False)
    op.create_table('tb_database_table_sample',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('content', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('database_table_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['database_table_id'], ['tb_database_table.id'], name='fk_database_table_sample_database_table_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_database_table_sample_database_table_id'), 'tb_database_table_sample', ['database_table_id'], unique=False)
    op.create_table('tb_table_column',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=8000), nullable=True),
    sa.Column('data_type', sa.Enum('AGGREGATEFUNCTION', 'ARRAY', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BYTEA', 'BYTEINT', 'BYTES', 'CHAR', 'CIDR', 'CLOB', 'DATE', 'DATETIME', 'DATETIMERANGE', 'DECIMAL', 'DOUBLE', 'ENUM', 'ERROR', 'FIXED', 'FLOAT', 'GEOGRAPHY', 'GEOMETRY', 'HLLSKETCH', 'IMAGE', 'INET', 'INT', 'INTERVAL', 'IPV4', 'IPV6', 'JSON', 'LONG', 'LONGBLOB', 'LOWCARDINALITY', 'MACADDR', 'MAP', 'MEDIUMBLOB', 'MEDIUMTEXT', 'NTEXT', 'NULL', 'NUMBER', 'NUMERIC', 'PG_LSN', 'PG_SNAPSHOT', 'POINT', 'POLYGON', 'RECORD', 'ROWID', 'SET', 'SMALLINT', 'SPATIAL', 'STRING', 'STRUCT', 'SUPER', 'TABLE', 'TEXT', 'TIME', 'TIMESTAMP', 'TIMESTAMPZ', 'TINYINT', 'TSQUERY', 'TSVECTOR', 'TUPLE', 'TXID_SNAPSHOT', 'UNION', 'UNKNOWN', 'UUID', 'VARBINARY', 'VARCHAR', 'VARIANT', 'XML', 'YEAR', name='DataTypeEnumType'), nullable=False),
    sa.Column('array_data_type', sa.String(length=200), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('precision', sa.Integer(), nullable=True),
    sa.Column('scale', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('primary_key', sa.Boolean(), nullable=False),
    sa.Column('nullable', sa.Boolean(), nullable=False),
    sa.Column('unique', sa.Boolean(), nullable=False),
    sa.Column('is_metadata', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('table_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['tb_database_table.id'], name='fk_table_column_table_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_table_column_table_id'), 'tb_table_column', ['table_id'], unique=False)
    op.create_table('tb_table_constraint',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', sa.Enum('UNIQUE', 'PRIMARY_KEY', 'FOREIGN_KEY', 'SORT_KEY', 'DIST_KEY', name='TableConstraintTypeEnumType'), nullable=False),
    sa.Column('table_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['tb_database_table.id'], name='fk_table_constraint_table_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_table_constraint_table_id'), 'tb_table_constraint', ['table_id'], unique=False)
    op.create_table('tb_table_profile',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('table_created_at', sa.DateTime(), nullable=True),
    sa.Column('column_count', sa.Integer(), nullable=True),
    sa.Column('row_count', sa.Integer(), nullable=True),
    sa.Column('size_in_bytes', sa.Integer(), nullable=True),
    sa.Column('table_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['tb_database_table.id'], name='fk_table_profile_table_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_table_profile_table_id'), 'tb_table_profile', ['table_id'], unique=False)
    op.create_table('tb_table_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('table_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('action_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['action_id'], ['tb_action.id'], name='fk_table_role_action_id'),
    sa.ForeignKeyConstraint(['role_id'], ['tb_role.id'], name='fk_table_role_role_id'),
    sa.ForeignKeyConstraint(['table_id'], ['tb_database_table.id'], name='fk_table_role_table_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_table_role_action_id'), 'tb_table_role', ['action_id'], unique=False)
    op.create_index(op.f('ix_tb_table_role_role_id'), 'tb_table_role', ['role_id'], unique=False)
    op.create_index(op.f('ix_tb_table_role_table_id'), 'tb_table_role', ['table_id'], unique=False)
    op.create_table('tb_column_profile',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('values_count', sa.Integer(), nullable=True),
    sa.Column('values_percentage', sa.Float(), nullable=True),
    sa.Column('valid_count', sa.Integer(), nullable=True),
    sa.Column('duplicate_count', sa.Integer(), nullable=True),
    sa.Column('null_count', sa.Integer(), nullable=True),
    sa.Column('null_proportion', sa.Float(), nullable=True),
    sa.Column('missing_percentage', sa.Float(), nullable=True),
    sa.Column('missing_count', sa.Integer(), nullable=True),
    sa.Column('unique_count', sa.Integer(), nullable=True),
    sa.Column('unique_proportion', sa.Float(), nullable=True),
    sa.Column('distinct_count', sa.Integer(), nullable=True),
    sa.Column('distinct_proportion', sa.Float(), nullable=True),
    sa.Column('min', sa.String(length=200), nullable=True),
    sa.Column('max', sa.String(length=200), nullable=True),
    sa.Column('min_length', sa.Integer(), nullable=True),
    sa.Column('max_length', sa.Integer(), nullable=True),
    sa.Column('mean', sa.Float(), nullable=True),
    sa.Column('sum', sa.Float(), nullable=True),
    sa.Column('stddev', sa.Float(), nullable=True),
    sa.Column('variance', sa.Float(), nullable=True),
    sa.Column('median', sa.Float(), nullable=True),
    sa.Column('first_quartile', sa.Float(), nullable=True),
    sa.Column('third_quartile', sa.Float(), nullable=True),
    sa.Column('inter_quartile_range', sa.Float(), nullable=True),
    sa.Column('non_parametric_skew', sa.Float(), nullable=True),
    sa.Column('histogram', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('column_id', sa.UUID(), nullable=False),
    sa.Column('table_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['column_id'], ['tb_table_column.id'], name='fk_column_profile_column_id'),
    sa.ForeignKeyConstraint(['table_id'], ['tb_database_table.id'], name='fk_column_profile_table_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tb_column_profile_column_id'), 'tb_column_profile', ['column_id'], unique=False)
    op.create_index(op.f('ix_tb_column_profile_table_id'), 'tb_column_profile', ['table_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tb_column_profile_table_id'), table_name='tb_column_profile')
    op.drop_index(op.f('ix_tb_column_profile_column_id'), table_name='tb_column_profile')
    op.drop_table('tb_column_profile')
    op.drop_index(op.f('ix_tb_table_role_table_id'), table_name='tb_table_role')
    op.drop_index(op.f('ix_tb_table_role_role_id'), table_name='tb_table_role')
    op.drop_index(op.f('ix_tb_table_role_action_id'), table_name='tb_table_role')
    op.drop_table('tb_table_role')
    op.drop_index(op.f('ix_tb_table_profile_table_id'), table_name='tb_table_profile')
    op.drop_table('tb_table_profile')
    op.drop_index(op.f('ix_tb_table_constraint_table_id'), table_name='tb_table_constraint')
    op.drop_table('tb_table_constraint')
    op.drop_index(op.f('ix_tb_table_column_table_id'), table_name='tb_table_column')
    op.drop_table('tb_table_column')
    op.drop_index(op.f('ix_tb_database_table_sample_database_table_id'), table_name='tb_database_table_sample')
    op.drop_table('tb_database_table_sample')
    op.drop_index(op.f('ix_tb_database_table_database_schema_id'), table_name='tb_database_table')
    op.drop_index(op.f('ix_tb_database_table_database_id'), table_name='tb_database_table')
    op.drop_table('tb_database_table')
    op.drop_index(op.f('ix_tb_database_schema_database_id'), table_name='tb_database_schema')
    op.drop_table('tb_database_schema')
    op.drop_index(op.f('ix_tb_database_provider_ingestion_log_ingestion_id'), table_name='tb_database_provider_ingestion_log')
    op.drop_table('tb_database_provider_ingestion_log')
    op.drop_index(op.f('ix_tb_database_provider_ingestion_provider_id'), table_name='tb_database_provider_ingestion')
    op.drop_table('tb_database_provider_ingestion')
    op.drop_index(op.f('ix_tb_database_provider_connection_provider_id'), table_name='tb_database_provider_connection')
    op.drop_table('tb_database_provider_connection')
    op.drop_index(op.f('ix_tb_database_provider_id'), table_name='tb_database')
    op.drop_table('tb_database')
    op.drop_index(op.f('ix_tb_a_i_model_result_model_id'), table_name='tb_a_i_model_result')
    op.drop_table('tb_a_i_model_result')
    op.drop_index(op.f('ix_tb_a_i_model_hyper_parameter_model_id'), table_name='tb_a_i_model_hyper_parameter')
    op.drop_table('tb_a_i_model_hyper_parameter')
    op.drop_index(op.f('ix_tb_a_i_model_attribute_model_id'), table_name='tb_a_i_model_attribute')
    op.drop_table('tb_a_i_model_attribute')
    op.drop_index(op.f('ix_tb_responsibility_type_id'), table_name='tb_responsibility')
    op.drop_index(op.f('ix_tb_responsibility_contact_id'), table_name='tb_responsibility')
    op.drop_index(op.f('ix_tb_responsibility_asset_id'), table_name='tb_responsibility')
    op.drop_table('tb_responsibility')
    op.drop_index(op.f('ix_tb_database_provider_provider_type_id'), table_name='tb_database_provider')
    op.drop_table('tb_database_provider')
    op.drop_index(op.f('ix_tb_asset_tag_tag_id'), table_name='tb_asset_tag')
    op.drop_index(op.f('ix_tb_asset_tag_asset_id'), table_name='tb_asset_tag')
    op.drop_table('tb_asset_tag')
    op.drop_index(op.f('ix_tb_asset_link_asset_id'), table_name='tb_asset_link')
    op.drop_table('tb_asset_link')
    op.drop_table('tb_a_i_model')
    op.drop_index(op.f('ix_tb_person_user_id'), table_name='tb_person')
    op.drop_table('tb_person')
    op.drop_table('tb_company')
    op.drop_index(op.f('ix_tb_asset_layer_id'), table_name='tb_asset')
    op.drop_index(op.f('ix_tb_asset_fully_qualified_name'), table_name='tb_asset')
    op.drop_index(op.f('ix_tb_asset_domain_id'), table_name='tb_asset')
    op.drop_table('tb_asset')
    op.drop_table('tb_user')
    op.drop_table('tb_tag')
    op.drop_table('tb_role')
    op.drop_table('tb_responsibility_type')
    op.drop_table('tb_layer')
    op.drop_table('tb_domain')
    op.drop_table('tb_database_provider_type')
    op.drop_table('tb_contact')
    op.drop_table('tb_action')
    # ### end Alembic commands ###
